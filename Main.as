package {	//libraries	import fl.ik.*;	import flash.events.*;	import flash.net.*;	import flash.xml.*;	import flash.display.*;	import flash.filesystem.*;	import flash.utils.*;		import flash.text.*;		public class Main extends MovieClip {		//---   GLOBALS   ---		//*************************		public var switchWrite=false;// read or write XML data to a file.		public var showDots=true;		//*************************		public var readFileName1="mocapData.xml";		public var writeFileName="mocapData.xml";		public var readFilePath = "xml_read/";		//unfortunately, right now you must use an absolute path for the write file.  Change this:		public var writeFilePath="/Users/nick/Projects/Development/ActionScript/2011/osceleton_flash/basic_mocap/basic_mocap02/xml_write/";		public var counter=0;		public var delayNum=192;//192;		public var allFrames=400;//1135;		public var counterMax=allFrames+delayNum;		public var guideDots = new Array();				//---   IK   ------------------------------				/*		public var tree1 = IKManager.getArmatureByName("Armature_1");		public var bone1 = tree1.getBoneByName("arm1bone1");		public var tree2 = IKManager.getArmatureByName("Armature_2");		public var bone2 = tree2.getBoneByName("arm2bone1");		// tailJoint will manage the point of your bone, if you want to manage the head of your bone you need to use headJoint		public var tJ1 = bone1.tailJoint;		public var posT1 = tJ1.position;		public var tJ2 = bone2.tailJoint;		public var posT2 = tJ2.position;		 		public var ikMover1 = new IKMover(tJ1, posT1);		public var ikMover2 = new IKMover(tJ2, posT2); 		*/				//---   READ XML   -----------------------------------		public var headX = new Array();		public var headY = new Array();		public var r_handX = new Array();		public var r_handY = new Array();		public var l_handX = new Array();		public var l_handY = new Array();		public var torsoX = new Array();		public var torsoY = new Array();		public var xmlLoader1 = new URLLoader();		//---   RECEIVE OSC   ---		//osc globals		var mySocket;		var ipAddress="127.0.0.1";		var portNumber=3000;		/*		//full list		var oscNames = new Array(		"head","neck","torso","r_shoulder","r_elbow","r_hand","l_shoulder","l_elbow","l_hand","r_hip","r_knee","r_foot","l_hip","l_knee","l_foot"		);		*/		var oscNames = new Array(		"headX","headY","r_handX","r_handY","l_handX","l_handY","torsoX","torsoY"		);		var oscData=new Array(oscNames.length);				//constructor				public function Main() {			//		//these will always run		xmlLoader1.addEventListener(Event.COMPLETE, parseXML1);		xmlLoader1.load(new URLRequest(readFilePath + readFileName1));					if (switchWrite) {			StageQuality.LOW;			connect();		}						//----------------------------------		//guide dots		if (showDots) {			for (var i=0; i<oscNames.length/2; i++) {// /2 because oscNames has both x and y coords				guideDots[i] = new GuideDot();				addChild(guideDots[i]);			}		}							//------				addEventListener("enterFrame",doStuff);		}		public function parseXML1(event) {			trace("file loaded!");			XML.ignoreWhitespace=true;			var MotionCapture=new XML(event.target.data);			for (var i=0; i < MotionCapture.MocapFrame.length(); i++) {				/*				for each (var att in MotionCapture.MocapFrame[i].Skeleton.Joints.head.attributes()){					if(att.name()=="x"){ headX[i]= att; }					if(att.name()=="y"){ headY[i]= att; }				}*/			 	headX[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.head.@x;				headY[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.head.@y;				r_handX[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.r_hand.@x;				r_handY[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.r_hand.@y;				l_handX[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.l_hand.@x;				l_handY[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.l_hand.@y;				torsoX[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.torso.@x;				torsoY[i]=MotionCapture.MocapFrame[i].Skeleton.Joints.torso.@y;			}		}		//---   WRITE XML   -----------------------------------		var myLoader;		var MotionCapture = new XML(<MotionCapture/>);		//var snd = new RecordSound;		//var channel = new SoundChannel();		public function xmlAdd() {			//first			var MocapFrame = <MocapFrame/>;			MocapFrame.@index = counter-delayNum;			//--			MocapFrame.appendChild(<Skeleton/>);			MocapFrame.Skeleton.appendChild(<Joints/>);			//--;			MocapFrame.Skeleton.Joints.appendChild(<head/>);			MocapFrame.Skeleton.Joints.head.@["x"] = oscData[0];			MocapFrame.Skeleton.Joints.head.@["y"] = oscData[1];			MocapFrame.Skeleton.Joints.appendChild(<r_hand/>);			MocapFrame.Skeleton.Joints.r_hand.@["x"] = oscData[2];			MocapFrame.Skeleton.Joints.r_hand.@["y"] = oscData[3];			MocapFrame.Skeleton.Joints.appendChild(<l_hand/>);			MocapFrame.Skeleton.Joints.l_hand.@["x"] = oscData[4];			MocapFrame.Skeleton.Joints.l_hand.@["y"] = oscData[5];			MocapFrame.Skeleton.Joints.appendChild(<torso/>);			MocapFrame.Skeleton.Joints.torso.@["x"] = oscData[6];			MocapFrame.Skeleton.Joints.torso.@["y"] = oscData[7];			//--;			//last;			MotionCapture.appendChild(MocapFrame);		}		public function xmlSaveToDisk() {			try{			var saveStr=MotionCapture.toXMLString();			var file = new File(writeFilePath + writeFileName);			var fs = new FileStream();			fs.open(file, FileMode.WRITE);			fs.writeUTFBytes(saveStr);			fs.close();			}			catch(err2:Error){			trace(err2.message);			}			stop();		}		//--set up osc		public function connect() {			mySocket = new XMLSocket();			mySocket.addEventListener(Event.CONNECT, handleConnect);			mySocket.addEventListener(Event.CLOSE, handleClose);			mySocket.addEventListener(DataEvent.DATA, oscEvent);			mySocket.connect(ipAddress, portNumber);		}		public function handleConnect(event) {			trace("XML Socket connected!");			//gotoAndStop(2);		}		public function handleClose(event) {			trace("XML Socket closed!");		}		public function oscEvent(event) {			var XMLData:XMLList=new XMLList(event.data);			for (var i=0; i<oscNames.length; i++) {				if (XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[1]=="head") {					oscData[0]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[5];					oscData[1]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[7];				}				if (XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[1]=="r_hand") {					oscData[2]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[5];					oscData[3]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[7];				}				if (XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[1]=="l_hand") {					oscData[4]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[5];					oscData[5]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[7];				}				if (XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[1]=="torso") {					oscData[6]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[5];					oscData[7]=XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()[7];				}			}			//trace(XMLData.MESSAGE.(@NAME=="/joint").ARGUMENT.attributes()); //dumps all attributes!			//trace("l_hand: " + oscData[0] + ", " + oscData[1] + "   r_hand: " + oscData[2] + ", " + oscData[3]);		}	//----------------------		public function doStuff(event) {		trace("frame " + counter);		var qheadX,qheadY,qr_handX,qr_handY,ql_handX,ql_handY,qtorsoX,qtorsoY;			if (switchWrite) {				qheadX=oscData[0];				qheadY=oscData[1];				qr_handX=oscData[2];				qr_handY=oscData[3];				ql_handX=oscData[4];				ql_handY=oscData[5];				qtorsoX=oscData[6];				qtorsoY=oscData[7];			} else if (!switchWrite) {				qheadX=headX[counter];				qheadY=headY[counter];				qr_handX=r_handX[counter];				qr_handY=r_handY[counter];				ql_handX=l_handX[counter];				ql_handY=l_handY[counter];				qtorsoX=torsoX[counter];				qtorsoY=torsoY[counter];			}			trace(qr_handX + " " + qr_handY);			//draw stuff			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~			try{/*	posT1.y=mouseY;	ikMover1.moveTo(posT1);	posT2.y=mouseY;	ikMover2.moveTo(posT2);*/			}			catch(err1:Error){			trace(err1.message);			}			if (showDots) {				guideDots[0].x=qheadX*stage.stageWidth;				guideDots[0].y=qheadY*stage.stageHeight;				guideDots[1].x=qr_handX*stage.stageWidth;				guideDots[1].y=qr_handY*stage.stageHeight;				guideDots[2].x=ql_handX*stage.stageWidth;				guideDots[2].y=ql_handY*stage.stageHeight;				guideDots[3].x=qtorsoX*stage.stageWidth;				guideDots[3].y=qtorsoY*stage.stageHeight;			}			//~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~;			if (counter < counterMax) {				counter++;				if (switchWrite) {					xmlAdd();				}			} else {				if (switchWrite) {					xmlSaveToDisk();					trace("FINISHED");					}			}		}		//---   END   ---	}}